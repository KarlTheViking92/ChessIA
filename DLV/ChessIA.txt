#maxint=70.
row(0..7).
column(0..7).
piece(Id,Name,Value,Colour,Eaten,Promoved,Moved).
permittedMove(Piece,X,Y).

blackPieces(Id,Name):-piece(Id,Name,_,0,_,_,_).
whitePieces(Id,Name):-piece(Id,Name,_,1,_,_,_).

pieceOnChessboard(P,X,Y):-piece(P,_,_,_,_,_,_),chessboard(X,Y).
chessboard(X,Y):-row(X),column(Y).
canEat(P,P1,X,Y):-piece(P,X,Y), piece(P1,X,Y),P!=P1.
:-eat(P1,P,X,Y), eat(P2,P,Z,C),P1!=P2.
canMove(P,X,Y,X1,Y1):-piece(P,X,Y),permittedMove(P,X1,Y1).
:-eat(P,P1,X,Y),piece(P1,"re",_,_,_,_,_).

move(P,X,Y,X1,Y1) | eat(P,P1,X,Y):- canMove(P,X,Y,X1,Y1),canEat(P,P1,X,Y).
