#maxint=102.
row(0..7).
column(0..7).
%piece(Id,Name,Value,Colour,Eaten,Promoved,Moved).
%permittedMove(Piece,X,Y).
%pieceOnChessboard(IdPiece, Colour , X, Y).
turn(0).

blackPieces(Id,Name):-piece(Id,Name,_,0,_,_,_).
whitePieces(Id,Name):-piece(Id,Name,_,1,_,_,_).

chessboard(X,Y):-row(X),column(Y).

enemyPieces(P) :- piece(P,_,_,T,_,_,_), not turn(T).

:- move(P, _, _ , _ ,_ ), piece(P,_,_,T,_,_,_), not turn(T).
:- eat(P, _, _ , _ ), piece(P,_,_,T,_,_,_), not turn(T).

%pieceOnChessboard(P,X,Y):-piece(P,_,_,_,_,_,_),chessboard(X,Y).

canEat(P,P1) :- canMove(P, X, Y, X1, Y1 ), pieceOnChessboard(P1, T, X1, Y1), P != P1, turn(T) . 

%piece(P,X,Y), piece(P1,X,Y),P!=P1.
:-eat(P1,P,X,Y), eat(P2,P,Z,C),P1!=P2.

canMove(P,X,Y,X1,Y1) :- pieceOnChessboard(P, T,X,Y),permittedMove(P,X1,Y1) , turn(T).

:-eat(P,P1,X,Y),piece(P1,"King",_,_,_,_,_).

move(P,X,Y,X1,Y1) | eat(P,P1,X,Y):- canMove(P,X,Y,X1,Y1),canEat(P,P1). 

isPermitKing(P) :- enemyPieces(P), canEat(P,P1), piece( P1,"King", _, _, _, _ , _ ), not enemyPieces(P1). 



piece(1,"Pawn", 1, 0, 0, 0, 0 ).
piece(2,"Pawn", 1, 0, 0, 0, 0 ).
piece(3,"Pawn", 1, 0, 0, 0, 0).
piece(4,"Pawn", 1, 0, 0, 0, 0).
piece(5,"Pawn", 1, 0, 0, 0, 0).
piece(6,"Pawn", 1, 0, 0, 0, 0 ).
piece(7,"Pawn", 1, 0, 0, 0, 0 ).
piece(8,"Pawn", 1, 0, 0, 0, 0).

piece(9,"Rook", 5, 0, 0, 0, 0).
piece(10,"Knight", 3, 0, 0, 0, 0 ).
piece(11,"Bishop", 3, 0, 0, 0, 0 ).
piece(12,"Queen", 9, 0, 0, 0, 0 ).
piece(13,"King", 100, 0, 0, 0, 0 ).
piece(14,"Bishop", 1, 0, 0, 0, 0 ).
piece(15,"Knight", 3, 0, 0, 0, 0 ).
piece(16,"Rook", 5, 0, 0, 0, 0 ).

% Bianchi %
piece(1,"Pawn", 1, 1, 0, 0, 0 ).
piece(2,"Pawn", 1, 1, 0, 0, 0 ).
piece(3,"Pawn", 1, 1, 0, 0, 0 ).
piece(4,"Pawn", 1, 1, 0, 0, 0 ).
piece(5,"Pawn", 1, 1, 0, 0, 0 ).
piece(6,"Pawn", 1, 1, 0, 0, 0 ).
piece(7,"Pawn", 1, 1, 0, 0, 0 ).
piece(8,"Pawn", 1, 1, 0, 0, 0 ).

piece(9,"Rook", 5, 1, 0, 0, 0 ).
piece(10,"Knight", 3, 1, 0, 0, 0 ).
piece(11,"Bishop", 3, 1, 0, 0, 0 ).
piece(12,"Queen", 9, 1, 0, 0, 0 ).
piece(13,"King", 100, 1, 0, 0, 0).
piece(14,"Bishop", 1, 1, 0, 0, 0 ).
piece(15,"Knight", 3, 1, 0, 0, 0 ).
piece(16,"Rook", 5, 1, 0, 0, 0 ).

 % mosse permesse %
permittedMove( 1 , 2 , 0).
permittedMove( 1 , 3 , 0).
permittedMove( 2 , 2 , 1).
permittedMove( 2 , 3 , 1).
permittedMove( 3 , 2 , 2).
permittedMove( 3 , 3 , 2).
permittedMove( 4 , 2 , 3).
permittedMove( 4 , 3 , 3).
permittedMove( 5 , 2 , 4).
permittedMove( 5 , 3 , 4).
permittedMove( 6 , 2 , 5).
permittedMove( 6 , 3 , 5).
permittedMove( 7 , 2 , 6).
permittedMove( 7 , 3 , 6).
permittedMove( 8 , 2 , 7).
permittedMove( 8 , 3 , 7).

permittedMove( 10, 2 , 0).
permittedMove( 10 , 2 , 2).

permittedMove( 15, 2 , 5).
permittedMove( 15 , 2 , 7).


	% posizioni sulla scacchiera %


pieceOnChessboard(1, 0 , 1, 0).
pieceOnChessboard(2, 0 , 1, 1).
pieceOnChessboard(3, 0 , 1, 2).
pieceOnChessboard(4, 0 , 1, 3).
pieceOnChessboard(5, 0 , 1, 4).
pieceOnChessboard(6, 0 , 1, 5).
pieceOnChessboard(7, 0 , 1, 6).
pieceOnChessboard(8, 0 , 1, 7).
pieceOnChessboard(9, 0 , 0, 0).
pieceOnChessboard(10, 0 , 0, 1).
pieceOnChessboard(11, 0 , 0, 2).
pieceOnChessboard(12, 0 , 0, 3).
pieceOnChessboard(13, 0 , 0, 4).
pieceOnChessboard(14, 0 , 0, 5).
pieceOnChessboard(15, 0 , 0, 6).
pieceOnChessboard(16, 0 , 0, 7).


pieceOnChessboard(1, 1 , 6, 0).
pieceOnChessboard(2, 1 , 6, 1).
pieceOnChessboard(3, 1 , 6, 2).
pieceOnChessboard(4, 1 , 6, 3).
pieceOnChessboard(5, 1 , 6, 4).
pieceOnChessboard(6, 1 , 6, 5).
pieceOnChessboard(7, 1 , 6, 6).
pieceOnChessboard(8, 1 , 6, 7).
pieceOnChessboard(9, 1 , 7, 0).
pieceOnChessboard(10, 1 , 7, 1).
pieceOnChessboard(11, 1 , 7, 2).
pieceOnChessboard(12, 1 , 7, 3).
pieceOnChessboard(13, 1 , 7, 4).
pieceOnChessboard(14, 1 , 7, 5).
pieceOnChessboard(15, 1 , 7, 6).
pieceOnChessboard(16, 1 , 7, 7).

